version: "3"
services:
    zookeeper:
        image: docker.io/bitnami/zookeeper:latest
        restart: always
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
            ALLOW_ANONYMOUS_LOGIN: yes
        ports:
            - 2181:2181
        volumes:
            - "zookeeper_data:/bitnami"
        healthcheck:
            test: ["CMD", "nc", "-vz", "localhost", "2181"]
            interval: 10s
            timeout: 3s
            retries: 3

    kafka:
        image: docker.io/bitnami/kafka:latest
        restart: always
        depends_on:
            zookeeper:
                condition: service_healthy
        ports:
            - 9093:9093
        healthcheck:
            test: ["CMD", "nc", "-vz", "localhost", "9092"]
            interval: 10s
            timeout: 3s
            retries: 3
        volumes:
            - "kafka_data:/bitnami"
        environment:
            - KAFKA_CFG_NODE_ID=0
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
            - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
            - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT

    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        ports:
            - 8082:8080
        restart: always
        depends_on:
            kafka:
                condition: service_healthy
        environment:
            DYNAMIC_CONFIG_ENABLED: true
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
            
    kafka-topics-generator:
        image: docker.io/bitnami/kafka:latest
        depends_on:
            kafka:
                condition: service_healthy
        entrypoint: [ '/bin/sh', '-c' ]
        command: |
            " # blocks until kafka is reachable 
            kafka-topics --bootstrap-server kafka:9092 --list 
            echo -e 'Creating kafka topics' 
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic test-simple-01 --replication-factor 1 --partitions 1 
            echo -e 'Successfully created the following topics:' 
            kafka-topics --bootstrap-server kafka:9092 --list "        
            
volumes:
    zookeeper_data:
        driver: local
    kafka_data:
        driver: local    